==============================
How to use 2-matrix_divided.py
==============================

This module defines a float (rounded off to 2 digits)
function ``matrix_divided(matrix, div)``


usage
=====

``matrix_divided(matrix, div)`` function takes each element of
a matrix, divides it by div and returns a new matrix with these values.
Each element of the new matrix is rounded off to 2 digits

::

	>>> matrix = [
		[2, 4, 6],
		[8, 10, 12]
		]			#doctest: +NORMALIZE_WHITESPACE
	>>> matrix_divided(matrix, 2)
	[[1.00, 2.00, 3.00], [4.00, 5.00, 6.00]]

::

Returns a matrix rounded off to 2 digits

        >>> matrix = [ 
                [2.22, 4.44, 6.6],
                [8.84, 10,12]
                ]                       #doctest: +NORMALIZE_WHITESPACE
        >>> matrix_divided(matrix, 2)
        [[1.11, 2.22, 3.30], [4.42, 5, 6]]

::

When the matrix does not have rows of same length

        >>> matrix = [ 
                [2, 4, 6, 8, 10],
                [8, 10, 12,14]
                ]                       #doctest: +NORMALIZE_WHITESPACE
        >>> matrix_divided(matrix, 2)
        Traceback (most recent last call):
	...
	TypeError: Each row of the matrix must have the same size

::

Dividing by zero raises an error

        >>> matrix = [
                [2, 4, 6],
                [8, 10, 12]
                ]                       #doctest: +NORMALIZE_WHITESPACE
        >>> matrix_divided(matrix, 0)
        Traceback (most recent last call):
        ...
        ZeroDivisionError: division by zero

::

Matrix must be a list

        >>> matrix = [
                [2, 4, 'q'],
                [8, 10, 12]
                ]                       #doctest: +NORMALIZE_WHITESPACE
        >>> matrix_divided(2, 2)
        Traceback (most recent last call):
        ...
        TypeError: matrix must be a matrix (list of lists) of integers/floats

::

Non-numbers
===========

When a single element of the input matrix is not an int or float,
it raises a TypeError

        >>> matrix = [
                [2, 4, 'q'],
                [8, 10, 12]
                ]                       #doctest: +NORMALIZE_WHITESPACE
        >>> matrix_divided(matrix, 2)
        Traceback (most recent last call):
        ...
        TypeError: matrix must be a matrix (list of lists) of integers/floats

::

        >>> matrix = [
                [2, 4, 6],
                [8, 10, 'surprise']
                ]                       #doctest: +NORMALIZE_WHITESPACE
        >>> matrix_divided(matrix, 2)
        Traceback (most recent last call):
        ...
        TypeError: matrix must be a matrix (list of lists) of integers/floats

::

when we pass None it will raise a type error

        >>> matrix = [
                [2, 4, 6],
                [8, 10, 12]
                ]                       #doctest: +NORMALIZE_WHITESPACE
        >>> matrix_divided(None, 2)
        Traceback (most recent last call):
        ...
        TypeError: matrix must be a matrix (list of lists) of integers/floats

::

        >>> matrix = [
                [2, 4, 6],
                [8, 10, 12]
                ]                       #doctest: +NORMALIZE_WHITESPACE
        >>> matrix_divided(matrix, None)
        Traceback (most recent last call):
        ...
        TypeError: div must be a number
